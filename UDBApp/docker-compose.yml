version: '3.3'

services:

#docker compose up -d

   server:
        image: udbapp
        container_name: mainudbapp
        links:
            - redis-server
            - mongo_db
            - zookeeper
            - kafka
        ports:
            - "8082:8082"

        #networks:
         #springboot-mysql-net:

   redis-server:
       hostname: redis
       image: redis
       ports:
         - "6379:6379"
         
   mongo_db:
      image: mongo
      container_name: mongoDB  
      ports:
        - 27017:27017

#   zookeeper:
#     image: zookeeper
#     ports:
#       - "2181:2181"
#   kafka:
#     image: apache/kafka:latest
#     depends_on:
#       - zookeeper
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'



   zookeeper:
     image: wurstmeister/zookeeper
     expose:
       - "2181"
   kafka:
     image: wurstmeister/kafka
     ports:
       - "9092:9092"
     environment:
       KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
       #KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://<your public IP here>:9092
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:SASL_PLAINTEXT
       #KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#       KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
#       KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
#       KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
     depends_on:
       - zookeeper
     volumes:
       - ./:/etc/kafka
#networks:
 # springboot-mysql-net:

#volumes:
 # db_data:
